About yourself:
	I have over 7.5 years of experience in the IT industry, with a strong background in frontend development and design.
	Currently working with cybage software as senior software engineer. working on google ads project its digital advertisement project.
	have working experience on project domains like e-learning, e-commerce, finance, real estate, digital advertising etc.
	My technology stack is Html, CSS, SCSS, JS, jQuery, Typescript, Bootstrap, Angular 8+, ES6, Angular material, Material UI, PrimeNg.
	Roles and responsibilities:
	Estimate the stories, verifying requirements, creating the designs, development, unit test cases, publish the changes to production
	supporting production environment, code review, bug fixes.

Project details:
	Google Ads is a product that you can use to promote your business, help sell products or services, raise awareness, and increase traffic to your website. Google Ads accounts are managed online, so you can create and change your ad campaign at any time, including your ad text, settings, and budget.
	we are using angular in frontend development and python as backend
	and using Kintaro CMS tool for storing all the Multi-language content,
	MVC architecture, DI, JWT for authentication and authorization,
	Solid principals, Gerrit tools for code quality and review,
	For ticket launch tracking we are using ASANA tool
	we are following Agile scrum modal in project
	We are using google cloud platform for cloud services

Why did you leave your previous company?
	I learned lot of things from my current organization, met some amazing colleagues
	but at this stage of my career I feel like I'm ready to move on. 
	that is why looking for change to grow professionally, develope expand my skills and knowledge.

Why should we hire you?
	I believe I am a good fit for this position, 
	as I have experience working in different work environments and have working experience on multiple domains.
	And I am confident that I can make a positive impact.

why you haven't joined a company for which you already have an offer?
	I see this role as a perfect fit for my career goals.
	While I have an offer from Company, I chose michelin as my primary choice 
	because i am looking for role that offers the best opportunity for professional growth and learning.
	Also I am particularly excited about the opportunity with Michelin because the role, company culture, projects, and high employee satisfaction according to the online review.

Why do you want to join this company?
	 I believe that my skills and experience align well with the goals of Tietoe, and I am excited about the opportunity to contribute to your team. Additionally, I am eager to learn from the talented professionals of Tietoe.
	 and I see this role as a perfect fit for my career goals.

What do you know about company?
Tietoe:
	this yearâ€™s company won AmbitionBox Employee Choice Awards
	company is listed in top 4 rank to work for
	Working on cloud, data and software engineering, Data analytics and AI,
	5G Radio Access Network (RAN) technologies - high performance communication capabilities on the cloud and edge, 5G Network development
	Banking / finance, healthcare domain.
	
Michelin:
	Is a largest tire manufacturing company established in 1889.
	Micheline main headquarters is Clermont-Ferrand, France.
	Number of employees: 1,32,000 (2022)
	28k million euro sales
	Apart from Tyres, Michelin is also into several other business lines like Roadmap, GPS Tracking systems, Medical equipment, 3D Printing machines and many more.
	The team at this site work on cutting edge technologies such as AI, Data Analytics, CRM, Mobile Apps, API, Design UX/UI, Cloud and other future ready technologies.
	mr.Florent Menegaux-Chief Executive Officer of the Michelin Group


Strength and weakness:
Strength:
	Problem-Solving Abilities - 
	I have a strong ability to solve complex problems and I really enjoy it.
	For example, recently we faced one issue which is directly impacting on client revenue, I tackled that issue and fixed it quickly. Received client appreciation for the same.
	Adaptability: I am highly adaptable and have a proven track record of quickly learning new tools and processes.
weakness:
	I find it difficult to say no to requests, which can sometimes lead to an overloaded schedule. I am working on this by prioritizing my tasks.

what motivates you most
	Overcoming challenges: Taking on challenging work, finding ways to solve problems, or spotting flaws and errors
	Recognition: Feeling appreciated by colleagues or getting praise

biggest achievement till date
	My biggest achievement I would say in my previous organization when I was working on Angular project but suddenly have to shift on react native project with tight deadline, At that time initial days was very tough for me but I find way and completed that project before timeline and got employee of the month award.

how you Handle work pressure 
	I take pressure as opportunity and utilize it doing hard work.
	I believe hard work is the only option to overcome from pressure.
	
long term goals:
	Gain leadership experience: 
	At this stage of my career, my main goal is to gain hands-on experience new technologies and develop a strong foundation in software industry.

Do you have any questions
	I would like to know more about this position. What will be the role and responsibilities etc.

Would you comfortable if ask you to work on C# or .net?
	While my primary expertise lies in frontend development, I am always open to expanding my skill set and learning new technologies.
	If given the opportunity, I would be excited to deepen my knowledge in these areas. I believe that having a solid understanding of backend technologies can enhance my effectiveness as a frontend developer.
	I have some foundational knowledge of C#/.NET from previous projects,
	I believe my strong problem-solving skills and understanding of software development principles will help me quickly get up to speed.
	

Technical: Optimization, SOLID, OOPS, Design patterns

OOPS:
	1. Encapsulation
	Encapsulation is the bundling of data (variables) and methods (functions) that operate on the data into a single unit, or class. It restricts direct access to some of the object's components, which is a means of preventing unintended interference and misuse of the data. Encapsulation can be achieved through access specifiers like private, protected, and public.

	Private: Only accessible within the same class.
	Protected: Accessible within the same class and derived classes.
	Public: Accessible from any other code.

	2. Abstraction
	Abstraction is the concept of hiding the complex implementation details and showing only the essential features of the object. This helps in reducing programming complexity and effort.

	3. Inheritance
	Inheritance is the mechanism by which one class (child/subclass) can inherit attributes and methods from another class (parent/superclass). This promotes code reusability and establishes a relationship between classes.

	4. Polymorphism
	Polymorphism means "many shapes" and allows methods to do different things based on the object it is acting upon, even though they share the same name.
	Polymorphism is the ability to create a class that has more than one form. Or in other words, classes have the same methods but different implementations.
	
SOLID:
	-Single Responsibility Principle (SRP): This principle states that a class or module should have only one responsibility. In Angular, this means that each component, service, or directive should have a single purpose and should not be responsible for multiple things.
	
	-Open-Closed Principle (OCP): This principle states that a module or class should be open for extension but closed for modification. In Angular, this means that we should be able to extend the behavior of a component or service without modifying its source code.
	
	-Liskov Substitution Principle (LSP): This principle states that any instance of a class should be able to be replaced by an instance of any of its subtypes without altering the correctness of the program. In Angular, this means that any child component should be able to replace its parent component without causing any issues.
	
	-Interface Segregation Principle (ISP): This principle states that clients should not be forced to depend on interfaces they do not use. In Angular, this means that a component or service should define only the methods and properties that are relevant to its consumers.
	
	-Dependency Inversion Principle (DIP): This principle states that modules should depend on abstractions, not on concrete implementations. In Angular, this means that a component or service should depend on interfaces or abstract classes instead of concrete classes or modules.
	https://ionicstart.com/modules/basics-application-architecture/2/